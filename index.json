[{"content":"Docker and Fedora 33 With the release of Fedora 33, Docker is not supported by Fedora 33 officially. This article will help you install Docker on Fedora 33.\nRemove old version sudo dnf remove docker-* sudo dnf config-manager --disable docker-* Enable old CGroups Docker still not support CgroupsV2.\nsudo grubby --update-kernel=ALL --args=\u0026#34;systemd.unified_cgroup_hierarchy=0\u0026#34; Set up firewall sudo firewall-cmd --permanent --zone=trusted --add-interface=docker0 sudo firewall-cmd --permanent --zone=FedoraWorkstation --add-masquerade Install Moby Moby is the open-source version of Docker.\nsudo dnf install moby-engine docker-compose sudo systemctl enable docker restart sudo reboot\nTest sudo docker run hello-world Runing without sudo sudo groupadd docker sudo usermod -aG docker $USER //reboot to take effect ","permalink":"tianfeng.ca/posts/fedora33-docker/","summary":"Docker and Fedora 33 With the release of Fedora 33, Docker is not supported by Fedora 33 officially. This article will help you install Docker on Fedora 33.\nRemove old version sudo dnf remove docker-* sudo dnf config-manager --disable docker-* Enable old CGroups Docker still not support CgroupsV2.\nsudo grubby --update-kernel=ALL --args=\u0026#34;systemd.unified_cgroup_hierarchy=0\u0026#34; Set up firewall sudo firewall-cmd --permanent --zone=trusted --add-interface=docker0 sudo firewall-cmd --permanent --zone=FedoraWorkstation --add-masquerade Install Moby Moby is the open-source version of Docker.","title":"Fedora 33 install Docker"},{"content":"Gofmt Go takes a strong stance on code formatting. The gofmt tool rewrites code into the standard format.\ngofmt filenames Golint Linter is a tool that analyzes source code to flag programming errors, bugs, stylistic errors, and suspicious constructs. Using Linter provides many benefits.\nFind bugs Speed up code review Manage code quality go get -u golang.org/x/lint/golint golint filenames VSCode setup Install the Go extension maintained by Go Team at Google(previously maintained by Microsoft).\nYou should immediately see a prompt in the bottom-right corner of your screen titled Analysis Tools Missing. This extension relies on a suite of command-line tools, which must be installed separately. Accept the prompt, or use the Go: Install/Update Tools command.\nAlso, see the tutorial https://code.visualstudio.com/docs/languages/go\nvim setup Install the vim-go plugin Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }\nThe official toturial https://github.com/fatih/vim-go/wiki\nHere are some settings from my vimrc file\naugroup go autocmd! autocmd FileType go nmap \u0026lt;silent\u0026gt; \u0026lt;Leader\u0026gt;v \u0026lt;Plug\u0026gt;(go-def-vertical) autocmd FileType go nmap \u0026lt;silent\u0026gt; \u0026lt;Leader\u0026gt;s \u0026lt;Plug\u0026gt;(go-def-split) autocmd FileType go nmap \u0026lt;silent\u0026gt; \u0026lt;Leader\u0026gt;d \u0026lt;Plug\u0026gt;(go-def-tab) autocmd FileType go nmap \u0026lt;silent\u0026gt; \u0026lt;Leader\u0026gt;x \u0026lt;Plug\u0026gt;(go-doc-vertical) autocmd FileType go nmap \u0026lt;silent\u0026gt; \u0026lt;Leader\u0026gt;i \u0026lt;Plug\u0026gt;(go-info) autocmd FileType go nmap \u0026lt;silent\u0026gt; \u0026lt;Leader\u0026gt;l \u0026lt;Plug\u0026gt;(go-metalinter) autocmd FileType go nmap \u0026lt;silent\u0026gt; \u0026lt;leader\u0026gt;b :\u0026lt;C-u\u0026gt;call \u0026lt;SID\u0026gt;build_go_files()\u0026lt;CR\u0026gt; autocmd FileType go nmap \u0026lt;silent\u0026gt; \u0026lt;leader\u0026gt;t \u0026lt;Plug\u0026gt;(go-test) autocmd FileType go nmap \u0026lt;silent\u0026gt; \u0026lt;leader\u0026gt;r \u0026lt;Plug\u0026gt;(go-run) autocmd FileType go nmap \u0026lt;silent\u0026gt; \u0026lt;leader\u0026gt;e \u0026lt;Plug\u0026gt;(go-install) autocmd FileType go nmap \u0026lt;silent\u0026gt; \u0026lt;Leader\u0026gt;c \u0026lt;Plug\u0026gt;(go-coverage-toggle) autocmd Filetype go command! -bang A call go#alternate#Switch(\u0026lt;bang\u0026gt;0, \u0026#39;edit\u0026#39;) autocmd Filetype go command! -bang AV call go#alternate#Switch(\u0026lt;bang\u0026gt;0, \u0026#39;vsplit\u0026#39;) autocmd Filetype go command! -bang AS call go#alternate#Switch(\u0026lt;bang\u0026gt;0, \u0026#39;split\u0026#39;) autocmd Filetype go command! -bang AT call go#alternate#Switch(\u0026lt;bang\u0026gt;0, \u0026#39;tabe\u0026#39;) augroup END ","permalink":"tianfeng.ca/posts/golang-setup/","summary":"Gofmt Go takes a strong stance on code formatting. The gofmt tool rewrites code into the standard format.\ngofmt filenames Golint Linter is a tool that analyzes source code to flag programming errors, bugs, stylistic errors, and suspicious constructs. Using Linter provides many benefits.\nFind bugs Speed up code review Manage code quality go get -u golang.org/x/lint/golint golint filenames VSCode setup Install the Go extension maintained by Go Team at Google(previously maintained by Microsoft).","title":"Go development with VSCode and vim"},{"content":"Hello world fmt.Println(\u0026#34;Hello, world\u0026#34;) ","permalink":"tianfeng.ca/posts/hello-world/","summary":"Hello world fmt.Println(\u0026#34;Hello, world\u0026#34;) ","title":"Hello World"}]